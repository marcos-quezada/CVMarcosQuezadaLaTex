{
    "name": "LaTeX VS Code Remote Container",

    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "dockerFile": "Dockerfile",

    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
		"james-yu.latex-workshop",
		"golf1052.base16-generator"
	],

    // Set *default* container specific settings.json values on container create.
    "settings": {
        "terminal.integrated.shell.linux": "zsh",
        "latex-workshop.latex.autoBuild.run": "never",
        "latex-workshop.latex.recipes": [
            {
                "name": "Default for CV ðŸ”ƒ",
                "tools": [
                    "xelatexmk"
                ]
            },
            {
                "name": "latexmk (latexmkrc)",
                "tools": [
                    "latexmk_rconly"
                ]
            },
            {
                "name": "latexmk (lualatex)",
                "tools": [
                    "lualatexmk"
                ]
            },
            {
                "name": "pdflatex âžž bibtex âžž pdflatexâ€ŠÃ—â€Š2",
                "tools": [
                    "pdflatex",
                    "bibtex",
                    "pdflatex",
                    "pdflatex"
                ]
            },
            {
                "name": "Compile Rnw files",
                "tools": [
                    "rnw2tex",
                    "latexmk"
                ]
            }
        ],
        "latex-workshop.latex.tools": [
            {
                "name": "xelatexmk",
                "command": "xelatex",
                "args": [
                    "%DOC%"
                ],
                "env": {}
            },
            {
                "name": "latexmk",
                "command": "latexmk",
                "args": [
                    "-synctex=1",
                    "-interaction=nonstopmode",
                    "-file-line-error",
                    "-pdf",
                    "-outdir=%OUTDIR%",
                    "%DOC%"
                ],
                "env": {}
            },
            {
                "name": "lualatexmk",
                "command": "latexmk",
                "args": [
                    "-synctex=1",
                    "-interaction=nonstopmode",
                    "-file-line-error",
                    "-lualatex",
                    "-outdir=%OUTDIR%",
                    "%DOC%"
                ],
                "env": {}
            },
            {
                "name": "latexmk_rconly",
                "command": "latexmk",
                "args": [
                    "%DOC%"
                ],
                "env": {}
            },
            {
                "name": "pdflatex",
                "command": "pdflatex",
                "args": [
                    "-synctex=1",
                    "-interaction=nonstopmode",
                    "-file-line-error",
                    "%DOC%"
                ],
                "env": {}
            },
            {
                "name": "bibtex",
                "command": "bibtex",
                "args": [
                    "%DOCFILE%"
                ],
                "env": {}
            },
            {
                "name": "rnw2tex",
                "command": "Rscript",
                "args": [
                    "-e",
                    "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
                ],
                "env": {}
            }
        ],
        "latex-workshop.view.pdf.viewer": "tab",
        "latex-workshop.synctex.afterBuild.enabled": true
    },

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],

    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "uname -a",

    // Uncomment to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

    // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
}